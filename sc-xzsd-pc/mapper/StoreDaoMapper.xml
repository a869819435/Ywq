<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.store.dao.StoreDao">

    <!--校验店长是否存在、电话是否已是别的店所用、用户是否已经是店长、营业执照是否已被使用-->
    <select id="countStoreInfo" parameterType="com.xzsd.pc.store.entity.Store" resultType="int">
        SELECT
            IF( COUNT(business_code)!= 0,1,0 ) +
            IF( (SELECT COUNT(user_id) FROM t_sys_user WHERE is_delete = 0
                    AND user_id = #{userId} AND role = '2' )=0,2,0 ) +
            IF( (SELECT COUNT(phone) FROM t_info_store WHERE is_delete = 0 AND phone = #{phone}
                <if test="storeId != null and storeId != '' ">
                    AND store_id != #{storeId}
                </if>) != 0,4,0 ) +
            IF( (SELECT COUNT(user_id) FROM t_info_store WHERE is_delete = 0 AND user_id = #{userId}
                <if test="storeId != null and storeId != '' ">
                    AND store_id != #{storeId}
                </if>) != 0,8,0 )
        FROM
            t_info_store
        WHERE
            is_delete = 0
            AND business_code = #{businessCode}
        <if test="storeId != null and storeId != '' ">
            AND store_id != #{storeId}
        </if>
    </select>

    <!--校验邀请码是否存在-->
    <select id="countInvite" parameterType="java.lang.String" resultType="int">
        SELECT
            COUNT(invite_code)
        FROM
            t_info_store
        WHERE
            is_delete = 0
            AND invite_code = #{inviteCode}
    </select>

    <!--新增门店-->
    <insert id="addStore" parameterType="com.xzsd.pc.store.entity.Store" >
        INSERT INTO t_info_store (
            store_id,
            store_name,
            phone,
            user_id,
            business_code,
            invite_code,
            province_id,
            city_id,
            area_id,
            address,
            is_delete,
            create_time,
            create_user,
            update_time,
            update_user,
            version
        )
        VALUES
            (
                #{storeId},
                #{storeName},
                #{phone},
                #{userId},
                #{businessCode},
                #{inviteCode},
                #{provinceId},
                #{cityId},
                #{areaId},
                #{address},
                0,
                NOW( ),
                #{createUser},
                NOW( ),
                #{createUser},
                0
            )
    </insert>

    <!--获取门店详情-->
    <select id="getStore" parameterType="java.lang.String" resultType="com.xzsd.pc.store.entity.Store">
        SELECT
            a.store_name storeName,
            a.phone,
            a.user_id userId,
            a.business_code businessCode,
            a.province_id provinceId,
            a.city_id cityId,
            a.area_id areaId,
            b.area_name provinceName,
            c.area_name cityName,
            d.area_name areaName,
            a.address,
            a.store_id storeId,
            a.version
        FROM
            t_info_store a
            LEFT JOIN t_info_area_level b ON a.province_id = b.area_id
            LEFT JOIN t_info_area_level c ON a.city_id = c.area_id
            LEFT JOIN t_info_area_level d ON a.area_id = d.area_id
            HAVING a.store_id = #{storeId}
    </select>

    <!--获取所有门店信息-->
    <select id="listStoreByPage" parameterType="com.xzsd.pc.store.entity.Store" resultType="com.xzsd.pc.store.entity.Store">
        SELECT
            a.store_id storeId,
            a.store_name storeName,
            a.phone,
            a.address,
            b.user_name userName,
            a.invite_code inviteCode,
            b.user_acct userAcct,
            a.version
        FROM
            t_info_store a
            LEFT JOIN t_sys_user b ON a.user_id = b.user_id
        WHERE
            a.is_delete = 0
        <if test="store.storeId != null and store.storeId != '' ">
            AND a.store_id LIKE concat('%',#{store.storeId},'%')
        </if>
        <if test="store.storeName != null and store.storeName != '' ">
            AND a.store_name LIKE concat('%',#{store.storeName},'%')
        </if>
        <if test="userName != null and userName != '' ">
            AND b.user_name LIKE concat('%',#{userName},'%')
        </if>
        <if test="store.provinceId != null and store.provinceId != '' ">
            AND a.province_id = #{store.provinceId}
        </if>
        <if test="store.cityId != null and store.cityId != '' ">
            AND a.city_id = #{store.cityId}
        </if>
        <if test="store.areaId != null and store.areaId != '' ">
            AND a.area_id = #{store.areaId}
        </if>
        <if test=" role == 2 ">
            AND a.user_id LIKE concat('%',#{store.userId},'%')
        </if>
        ORDER BY a.create_time DESC
    </select>

    <!--修改门店信息-->
    <update id="updateStore" parameterType="com.xzsd.pc.store.entity.Store" >
        UPDATE t_info_store
        SET
            store_name = #{storeName},
            phone = #{phone},
            user_id = #{userId},
            business_code = #{businessCode},
        <if test="provinceId != null and provinceId!= '' ">
            province_id = #{provinceId},
        </if>
        <if test="cityId != null and cityId!= '' ">
            city_id = #{cityId},
        </if>
        <if test="areaId != null and areaId!= '' ">
            area_id = #{areaId},
        </if>
            address = #{address},
            update_time = NOW(),
            update_user = #{updateUser},
            version = version + 1
        WHERE
            store_id = #{storeId}
            AND version = #{version}
    </update>

    <!--获取有订单的门店-->
    <select id="getHavingOrder" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT
            DISTINCT a.store_id storeId
        FROM
            t_info_store a
            LEFT JOIN t_info_order b ON a.store_id = b.store_id
        WHERE
            b.is_delete = 0
            AND a.store_id IN
            <foreach collection="listStoreId" item="item" index="index" open="(" separator=";" close=")">
                #{item}
            </foreach>
        GROUP BY a.store_id
    </select>

    <!--删除门店-->
    <update id="deleteStore" parameterType="java.lang.String">
        UPDATE
            t_info_store
        SET
            is_delete = 1,
            update_time =NOW(),
            update_user = #{updateUser}
        WHERE
            store_id IN
        <foreach item="item" index="index" collection="listStoreId" open = "(" separator="," close=")">
            #{item}
        </foreach>
    </update>

</mapper>
